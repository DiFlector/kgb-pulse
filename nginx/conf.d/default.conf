upstream php-fpm {
    server php:9000;
}

# HTTPS сервер
server {
    listen 443 ssl;
    server_name diflector.studio www.diflector.studio localhost;
    root /var/www/html;
    index index.php index.html;

    # Пути к SSL сертификатам Let's Encrypt
    ssl_certificate /etc/nginx/ssl/fullchain.pem;
    ssl_certificate_key /etc/nginx/ssl/privkey.pem;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers HIGH:!aNULL:!MD5;

    # Редирект с http на https
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

    # Обработчики ошибок
    error_page 401 /lks/html/401.html;
    error_page 403 /lks/html/403.html;
    error_page 404 /lks/html/404.html;
    error_page 500 502 503 504 /lks/html/50x.html;

    # Локация для страниц ошибок (без авторизации)
    location ~ ^/lks/html/.*\.html$ {
        internal;
        try_files $uri $uri/;
    }

    # Обработка PHP для корневого каталога (для тестовых файлов)
    location ~ ^/test.*\.php$ {
        include fastcgi_params;
        fastcgi_pass php-fpm;
        fastcgi_index index.php;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        fastcgi_read_timeout 300;
    }

    # Обработка PHP для lks
    location /lks {
        root /var/www/html;
        try_files $uri $uri/ /lks/index.php?$query_string;

        # Защищенные директории (требуют авторизации)
        location ~ ^/lks/enter/ {
            auth_request /lks/auth.php;
            auth_request_set $user $upstream_http_x_user;
            auth_request_set $role $upstream_http_x_role;
            try_files $uri $uri/ =404;
            location ~ \.php$ {
                include fastcgi_params;
                fastcgi_pass php-fpm;
                fastcgi_index index.php;
                fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
                fastcgi_param HTTP_X_USER $user;
                fastcgi_param HTTP_X_ROLE $role;
                fastcgi_read_timeout 300;
            }
        }
        # PHP файлы в корне lks и подпапках (кроме enter)
        location ~ \.php$ {
            include fastcgi_params;
            fastcgi_pass php-fpm;
            fastcgi_index index.php;
            fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
            fastcgi_read_timeout 300;
        }
    }

    # Локация для проверки авторизации
    location = /lks/auth.php {
        internal;
        include fastcgi_params;
        fastcgi_pass php-fpm;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        fastcgi_pass_request_body off;
        fastcgi_param CONTENT_LENGTH "";
        fastcgi_param QUERY_STRING "";
    }

    # Статические файлы
    location ~* \.(css|js|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
        access_log off;
        try_files $uri =404;
    }

    # Запрет доступа к скрытым файлам
    location ~ /\.
    {
        deny all;
        access_log off;
        log_not_found off;
    }

    # Запрет доступа к конфигурационным файлам
    location ~* \.(htaccess|htpasswd|ini|log|sh|sql|conf)$ {
        deny all;
        access_log off;
        log_not_found off;
    }

    # Главная страница
    location = / {
        return 301 /lks/;
    }

    # Обработка PHP для parking
    location /parking {
        root /var/www/html;
        try_files $uri $uri/ /parking/index.php?$query_string;
        location ~ \.php$ {
            try_files $uri =404;
            fastcgi_split_path_info ^(.+\.php)(/.+)$;
            fastcgi_pass php-fpm;
            fastcgi_index index.php;
            include fastcgi_params;
            fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
            fastcgi_param PATH_INFO $fastcgi_path_info;
        }
    }

    # Запрет доступа к .git и другим служебным директориям
    location ~ /\.
    {
        deny all;
    }

    # Отключение кэширования для PHP файлов (для отладки)
    location ~ \.php$ {
        add_header Cache-Control "no-cache, no-store, must-revalidate";
        add_header Pragma "no-cache";
        add_header Expires "0";
    }
}

# Редирект с http на https
server {
    listen 80;
    server_name diflector.studio www.diflector.studio localhost;
    return 301 https://$host$request_uri;
} 