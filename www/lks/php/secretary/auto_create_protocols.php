<?php
/**
 * –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —Å–æ–∑–¥–∞–Ω–∏–µ –ø—É—Å—Ç—ã—Ö –ø—Ä–æ—Ç–æ–∫–æ–ª–æ–≤ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
 * –§–∞–π–ª: www/lks/php/secretary/auto_create_protocols.php
 */

require_once __DIR__ . "/ProtocolManagerNew.php";

if (!defined('TEST_MODE') && session_status() === PHP_SESSION_NONE) {
    session_start();
}

// –í —Ä–µ–∂–∏–º–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ø—Ä–æ–ø—É—Å–∫–∞–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏
if (!defined('TEST_MODE')) {
    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞
    if (!isset($_SESSION['user_role']) || !in_array($_SESSION['user_role'], ['Secretary', 'SuperUser', 'Admin'])) {
        http_response_code(403);
        echo json_encode(['success' => false, 'message' => '–î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω']);
        exit();
    }
}

if (!defined('TEST_MODE')) header('Content-Type: application/json; charset=utf-8');

try {
    error_log("üîÑ [AUTO_CREATE_PROTOCOLS] –ó–∞–ø—Ä–æ—Å –Ω–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —Å–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–æ—Ç–æ–∫–æ–ª–æ–≤");
    
    // –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ POST –∑–∞–ø—Ä–æ—Å–∞
    if (defined('TEST_MODE')) {
        $data = $_POST;
    } else {
        $rawInput = file_get_contents('php://input');
        $data = json_decode($rawInput, true);
    }
    
    if (!$data) {
        throw new Exception('–ù–µ–≤–µ—Ä–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∑–∞–ø—Ä–æ—Å–∞');
    }
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è
    if (!isset($data['meroId']) || !isset($data['selectedDisciplines'])) {
        throw new Exception('–û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è: meroId, selectedDisciplines');
    }
    
    $meroId = (int)$data['meroId'];
    $selectedDisciplines = $data['selectedDisciplines'];
    $type = $data['type'] ?? 'both'; // 'start', 'finish', –∏–ª–∏ 'both'
    
    if ($meroId <= 0) {
        throw new Exception('–ù–µ–≤–µ—Ä–Ω—ã–π ID –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è');
    }
    
    if (!is_array($selectedDisciplines) || empty($selectedDisciplines)) {
        throw new Exception('–ù–µ –≤—ã–±—Ä–∞–Ω—ã –¥–∏—Å—Ü–∏–ø–ª–∏–Ω—ã');
    }
    
    if (!in_array($type, ['start', 'finish', 'both'])) {
        throw new Exception('–ù–µ–≤–µ—Ä–Ω—ã–π —Ç–∏–ø –ø—Ä–æ—Ç–æ–∫–æ–ª–∞');
    }
    
    error_log("üîÑ [AUTO_CREATE_PROTOCOLS] –°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–æ—Ç–æ–∫–æ–ª–æ–≤ –¥–ª—è –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è $meroId");
    
    // –°–æ–∑–¥–∞–µ–º –º–µ–Ω–µ–¥–∂–µ—Ä –ø—Ä–æ—Ç–æ–∫–æ–ª–æ–≤
    $protocolManager = new ProtocolManagerNew();
    
    // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–æ–∑–¥–∞–µ–º –ø—É—Å—Ç—ã–µ –ø—Ä–æ—Ç–æ–∫–æ–ª—ã
    $result = $protocolManager->autoCreateEmptyProtocols($meroId, $selectedDisciplines, $type);
    
    if ($result['success']) {
        $protocolCount = count($result['protocols']);
        error_log("‚úÖ [AUTO_CREATE_PROTOCOLS] –ü—Ä–æ—Ç–æ–∫–æ–ª—ã —Å–æ–∑–¥–∞–Ω—ã —É—Å–ø–µ—à–Ω–æ: $protocolCount –ø—Ä–æ—Ç–æ–∫–æ–ª–æ–≤");
    } else {
        error_log("‚ùå [AUTO_CREATE_PROTOCOLS] –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø—Ä–æ—Ç–æ–∫–æ–ª–æ–≤: " . $result['message']);
    }
    
    echo json_encode($result, JSON_UNESCAPED_UNICODE);
    
} catch (Exception $e) {
    error_log("‚ùå [AUTO_CREATE_PROTOCOLS] –û—à–∏–±–∫–∞: " . $e->getMessage());
    
    http_response_code(500);
    echo json_encode([
        'success' => false,
        'message' => $e->getMessage()
    ], JSON_UNESCAPED_UNICODE);
}
?> 